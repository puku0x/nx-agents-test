name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.tool-versions'

      - uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.arch }}-${{ runner.os }}-node-${{ steps.setup_nodejs.outputs.node-version }}-npm-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/cache@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            ~/.cache/ms-playwright
          key: ${{ runner.arch }}-${{ runner.os }}-node-${{ steps.setup_nodejs.outputs.node-version }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.arch }}-${{ runner.os }}-node-${{ steps.setup_nodejs.outputs.node-version }}-npm-

      - uses: nrwl/nx-set-shas@v4

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      - run: npx nx-cloud start-ci-run --distribute-on="5 custom-linux-medium-js" --stop-agents-after="e2e-ci"


      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      - run: npx nx affected -t lint test build
      - run: npx nx affected --parallel 1 -t e2e-ci
